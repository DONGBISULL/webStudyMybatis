<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.MemberDAO">
<!-- mapper 네임 스페이스 필수 -->
	
	<select id="selectMemberById" parameterType="String" resultType="MemberVO">
		SELECT MEM_ID , MEM_PASS, MEM_NAME
		FROM MEMBER 
		WHERE MEM_ID = #{mem_id} and mem_delete is NULL
	</select>
	
	<sql id="searchFrag">
	<where>
					<if test="simpleSearch!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleSearch.searchWord)">
						<choose>
							<when test="simpleSearch.searchType eq 'name'">
								INSTR(MEM_NAME , #{simpleSearch.searchWord} )>0
							</when>	
							<when test="simpleSearch.searchType eq 'address'">
								INSTR(MEM_ADD1 , #{simpleSearch.searchWord}) >0
							</when>	
							<when test="simpleSearch.searchType eq 'hp'">
								INSTR(MEM_HP , #{simpleSearch.searchWord}) >0
							</when>	
							<otherwise>
								INSTR(MEM_NAME , #{simpleSearch.searchWord} >0)
								OR INSTR(MEM_ADD1 , #{simpleSearch.searchWord} >0)
								OR INSTR(MEM_HP , #{simpleSearch.searchWord} >0)
							</otherwise>
						</choose>				
					</if>
				</where>
	</sql>
	
	<select id="selectTotalRecord" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER  
		<include refid="searchFrag"/>
	</select>
	
	<select id="selectMemebrList" resultType="MemberVO" parameterType="PagingVO">
	SELECT B.*		
		FROM  	
		 (SELECT   A.* , ROWNUM RNUM
				FROM
				(
					SELECT 
						mem_id,    mem_pass,    mem_name,    mem_regno1,  
						mem_regno2,    mem_bir,    mem_zip,   
					    mem_add1,    mem_add2,    mem_hometel,    mem_comtel, 
					    mem_hp,    mem_mail,    mem_job,    mem_like,         
					    mem_memorial,    mem_memorialday,    mem_mileage,     
					    mem_delete                              
					FROM MEMBER 
					<include refid="searchFrag"/>
					ORDER BY ROWID DESC 
				) A
		  )B
		<![CDATA[
		WHERE RNUM >=#{startRow} AND RNUM <=#{endRow}
		]]>
	</select>
	<resultMap type="MemberVO" id="memberMap" autoMapping="true">
		<id property="memId" column="MEM_ID"/>
		<collection property="prodList" javaType="java.util.Set" ofType="ProdVO"  autoMapping="true">
			<result property="prodId" column="PROD_ID"/>
			<association property="buyer" autoMapping="true"></association> <!-- has a 관계??? -->
		</collection>
	</resultMap>
	<select id="selectMemberDetail" parameterType="String"  resultMap="memberMap">
		WITH PRODALL AS (
    			SELECT PROD_ID , PROD_COST ,PROD_PRICE ,LPROD_NM
    				,  BUYER_NAME , BUYER_ADD1 ,BUYER_CHARGER 
    			FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
             		 	  INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID) 
				), CARTPROD AS (
    				SELECT DISTINCT CART_MEMBER , PRODALL.* 
 				    FROM CART INNER JOIN PRODALL ON (CART_PROD = PROD_ID)
			 ) 
				SELECT    
						 MEM_ID,    MEM_PASS,    MEM_NAME,         
						 MEM_REGNO1,    MEM_REGNO2,     to_char(mem_bir,'yyyy-mm-dd') as mem_bir,
						 MEM_ZIP, MEM_ADD1,    MEM_ADD2,  
						 MEM_HOMETEL,    MEM_COMTEL, 
						 MEM_HP,    MEM_MAIL,    MEM_JOB, 
						 MEM_LIKE,MEM_MEMORIAL,     to_char(mem_memorialday,'yyyy-mm-dd') as mem_memorialday,
						 MEM_MILEAGE, MEM_DELETE ,CARTPROD.*
						 FROM    MEMBER LEFT OUTER JOIN CARTPROD ON (MEM_ID = CART_MEMBER)                             
				 WHERE MEM_ID = #{mem_id}                                       
	
	</select>
 	<update id="updateMember" parameterType="MemberVO">
 	UPDATE member
    	SET
	        mem_name =#{memName,jdbcType=VARCHAR}    , 
	        mem_bir =to_date(#{memBir,jdbcType=DATE},'YYYY-MM-DD'), 
	        mem_zip =#{memZip,jdbcType=VARCHAR}   ,  
	        mem_add1 =#{memAdd1 ,jdbcType=VARCHAR},
	        mem_add2 =#{memAdd2,jdbcType=VARCHAR},
	       	mem_hometel =#{memHometel,jdbcType=VARCHAR}   ,
	        mem_comtel =#{memComtel ,jdbcType=VARCHAR}    ,
	 	    mem_hp =#{memHp},
	 	    mem_mail =#{memMail},
	 	    mem_job =#{memJob},
	 	    mem_like =#{memLike},
	        mem_memorial =#{memMemorial,jdbcType=VARCHAR},   
	    	mem_memorialday =to_date(#{memMemorialday,jdbcType=DATE},'YYYY-MM-DD' ),   
	    	mem_mileage =#{memMileage ,jdbcType=NUMERIC}
	WHERE
		mem_id =#{memId}
 	
 	</update>
 	
 	<delete id="deleteMember" parameterType="String">
 		UPDATE MEMBER
 		SET 
 		MEM_DELETE = '1' 
 		WHERE MEM_ID = #{mem_id}
 	
 	</delete>
 	
</mapper>